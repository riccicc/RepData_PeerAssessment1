class(test2)
test2
test3 <- gsub(",", "-", test2, fixed="TRUE")
test3
class(test3)
head(test3)
test3[6]
head(rawFeaturesText,3)
test3 <- gsub(",", "_", test2, fixed="TRUE")
test3
test4 <- gsub("-", "_", test3, fixed="TRUE")
test4
test5 <- gsub("(", "_", test4, fixed="TRUE")
test5
test6 <- gsub(")", "", test5, fixed="TRUE")
test6
test7 <- sapply(strsplit(rawFeaturesText, "\\()."),"",2)
test7 <- sapply(strsplit(rawFeaturesText[,2], "\\()"),"",2)
test7 <- sapply(strsplit(rawFeaturesText[,2], "\\()"),"",1)
names(rawFeaturesText)
test8 <- strsplit(rawFeaturesText$V2, "\\()", "")
test8
head(test8)
head(rawFeaturesText)
test8 <- strsplit(rawFeaturesText$V2, split="\\()", "", fixed="TRUE")
head(test8)
test8 <- strsplit(rawFeaturesText$V2, split="()", "", fixed="TRUE")
head(test8)
head(test2)
test9 <- data.frame(rawFeaturesText[1,], c(test2))
head(test9)
test9 <- data.frame(rawFeaturesText[1,], test2)
head(test9)
head(rawFeaturesText)
test10 <- cbind(rawFeaturesText, test2)
head(test10)
test10 <- cbind(rawFeaturesText, test6) ## this works.
head(test10)
tail(test10)
test11 <- test10[, !names(test10) %in% test10$V2]
head(test11)
tail(test11)
test11 <- test10[, c(V1, test6)]
test11 <- data.frame(test10$V1, test10$test6)
head(test11)
tail(test11)
View(test11)
tail(rawFeaturesText)
source('~/run_analysis.R')
head(featuresText)
tail(featuresText)
head(testData)
head(testTrain)
head(activityLabels)
head(rawFeaturesText)
head(featuresText)
source('~/LongDataDiscussion.R')
head(mtcars)
class(mtcars)
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
head(mtcars)
head(narrow)
library(reshape2)
wide1 <- tidied <- dcast(narrow, cyl + gear ~ vs, max)
wide2 <- tidied <- dcast(narrow, cyl + vs ~ gear, max)
wide1
wide2
wide3 <- tidied <- dcast(narrow, gear + vs ~ cyl, max)
wide3
notverywide <- aggregate(mpg ~ gear + vs + cyl, data = narrow, max)
notverywide
untidy <- with(narrow, tapply(mpg, list(cyl, vs, gear), max))
untidy
source('~/LongDataDiscussion.R')
source('~/run_analysis.R')
View(featuresText)
View(activityLabels)
View(trainTestCombo)
names(featuresText)
names(trainTestCombo)
trainTestCombo <- names(featuresText)[1,featuresText$cleanRaw6.cleanRaw5])
trainTestCombo <- names(featuresText)[1,featuresText$cleanRaw6.cleanRaw5]
trainTestCombo <- names(featuresText$cleanRaw6.cleanRaw5)
head(trainTestCombo)
names(featuresText$cleanRaw6.cleanRaw5)
names(featuresText)
head(featuresText)
trainTestCombo <- rbind(testData, testTrain)
trainTestComboNames <- featuresText[, cleanRaw6.cleanRaw5]
trainTestComboNames <- featuresText[, featuresText$cleanRaw6.cleanRaw5]
trainTestComboNames <- c(featuresText[featuresText$cleanRaw6.cleanRaw5]
trainTestComboNames <- c(featuresText[featuresText$cleanRaw6.cleanRaw5])
trainTestComboNames <- c(featuresText[,featuresText$cleanRaw6.cleanRaw5])
colnames(trainTestCombo) <- featuresTest[, 2]
colnames(trainTestCombo) <- featuresText[, 2]
head(trainTestCombo)
View(trainTestCombo)
quit()
source('~/run_analysis.R')
View(featuresText)
View(trainTestCombo)
library(reshape2)
View(activityLabels)
View(rawFeaturesText)
View(featuresText)
View(cleanRaw6)
featuresTextSplit <- strsplit((featuresText$cleanRaw6.cleanRaw5), "mean")
featuresTextSplit <- strsplit((featuresText$cleanRaw6.cleanRaw5), "mean", fixed=TRUE)
class(featuresText$cleanRaw6.cleanRaw5)
class(cleanRaw5)
cleanRaw5splitMean <- strsplit((cleanRaw5), "mean", fixed=TRUE)
head(cleanRaw5splitMean)
class(cleanRaw5splitMean)
y_train <- read.table(".\\CourseProject\\y_train.txt", stringsAsFactors=FALSE)
x_train <- read.table(".\\CourseProject\\x_train.txt", stringsAsFactors=FALSE)
y_train <- read.table(".\\CourseProject\\y_train.txt", stringsAsFactors=FALSE)
y_test <- read.table(".\\CourseProject\\y_test.txt", stringsAsFactors=FALSE)
source('~/run_analysis.R')
source('~/run_analysis.R')
source('~/run_analysis.R')
labels <- rbind(y_test, y_train)
subjects <- rbind(subject_test, subject_train)
View(labels)
View(subjects)
View(activityLabels)
View(trainTestCombo)
trainTestCombo <- cbind(subjects, trainTestCombo)
head(trainTestCombo)
trainTestCombo <- cbind(subject = subjects, trainTestCombo)
head(trainTestCombo,1)
trainTestCombo <- cbind("subject" = subjects, trainTestCombo)
names(trainTestCombo)
rename(trainTestCombo) <- rename(trainTestCombo,c("V1" = "subject"))
trainTestCombo <- rename(trainTestCombo,c("V1" = "subject"))
head(trainTestCombo)
source('~/run_analysis.R')
str(trainTestCombo)
summary(trainTestCombo)
head(trainTestCombo,1)
head(trainTestCombo)
tail(trainTestCombo)
tail(trainTestCombo)
tail(trainTestCombo[1:2])
trainTestCombo[1]
trainTestCombo[1:3]
head(trainTestCombo[1:4],100)
tail(trainTestCombo[1:3],100)
quit()
quit()
source('~/run_analysis.R')
trainTestCombo[,1:4]
trainTestCombo[1:20,1:4]
source('~/Wk4_Q1.R')
source('~/Wk4_Q1.R')
View(idahoData)
class(idahoData)
idahoData <- read.csv(".\\Quiz4\\idahoData.csv")
View(idahoData)
names(idahoData)
source('~/Wk4_Q1.R')
source('~/Wk4_Q1.R')
names(idahoData)
names(splitNames)
list(splitNames)
splitNames[123]
list(splitNames[123])
source('~/Wk4_Q2.R')
source('~/Wk4_Q2.R')
source('~/Wk4_Q2.R')
names(fgdpData)
head(fgdpData[2])
head(fgdpData[2],10)
head(fgdpData)
tail(fgdpData)
tail(fgdpData,20)
View(fgdpData)
cleanRaw1 <- gsub(",", "", fgdpData[,5], fixed="TRUE")
cleanRaw1[6]
cleanRaw1[5]
cleanRaw1[1]
cleanRaw1[2]
class(cleanRaw1)
cleanRaw1[1:15]
source('~/Wk4_Q2.R')
cleanRaw2 <- gsub(" ","", cleanRaw1, fixed="TRUE")
cleanRaw2[1:15]
cleanRaw2[195:220]
cleanRaw3 <- gsub("..", "", cleanRaw2, fixed="TRUE")
cleanRaw2[195:220]
is.na(cleanRaw2)
is.nan(cleanRaw3)
findAverage <- mean(cleanRaw3, na.rm=TRUE)
class(cleanRaw3[3])
class(cleanRaw3[7])
cleanRaw4 <- as.numeric(cleanRaw3)
cleanRaw4 <- as.numeric(cleanRaw3, na.rm=TRUE)
cleanRaw4
source('~/Wk4_Q2.R')
source('~/Wk4_Q2.R')
cleanRaw3
cleanRaw5 <- cleanRaw3[5:length(cleanRaw3)]
cleanRaw5
cleanRaw4 <- as.numeric(cleanRaw5, na.rm=TRUE)
findAverage <- mean(cleanRaw4, na.rm=TRUE)
cleanRaw5 <- cleanRaw3[5:390]
cleanRaw4 <- as.numeric(cleanRaw5, na.rm=TRUE)
findAverage <- mean(cleanRaw4, na.rm=TRUE)
findAverage
source('~/Wk4_Q2.R')
source('~/Wk4_Q2.R')
source('~/Wk4_Q2.R')
cleanRaw1[99]
cleanRaw1[90:110]
View(fgdpData)
cleanRaw1[103]
cleanRaw2[103]
cleanRaw2[103]
cleanRaw5[99]
source('~/Wk4_Q3.R')
question3Data <- fgdpData[5:194]
question3Data <- fgdpData[5:194,]
View(question3Data)
question3Data["row.names"[1]]
question3Data[1:3,1]
question3Data[1:5,4]
q3test1 <- grep("^United", question3Data[,4])
q3test2 <- grep("^United", question3Data$X.2)
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv?accessType=DOWNLOAD"
download.file(fileUrl1, destfile=".\\Quiz4\\fgdp.csv", method="auto")
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv?accessType=DOWNLOAD"
download.file(fileUrl2, destfile=".\\Quiz4\\country.csv", method="auto")
fedstats <- read.csv(".\\Quiz4\\country.csv")
head(fedstats)
names(fedstats)
summay(fedstats)
summary(fedstats)
head(question3Data)
question3Data$X
head(fedstats)
fedstats$CountryCode
length(fedstats$CountryCode)
length(question3Data$X)
question3Data$X
mergedData <- merge(question3Data, fedstats, by.x="X", by.y="CountryCode", all=TRUE)
head(mergedData)
mergedData2 <- merge(question3Data, fedstats, by.x="X", by.y="CountryCode", all=FALSE)
head(mergedData2)
mergedData$X
mergedData2$X
View(fedstats)
mergedData <- merge(question3Data, fedstats, by.x="X", by.y="CountryCode", all=FALSE)
class(fedstats$Special.Notes)
View(mergedData)
class(mergedData$Special.Notes)
fedstats2 <- read.csv(".\\Quiz4\\country.csv", stringsAsFactors=FALSE)
class(fedstats2$Special.Notes)
class(question3Data[,4])
grep("June", mergedData$CountryCode)
grep("June", mergedData2$CountryCode)
grep("June", mergedData2)
grep("June", mergedData2$Special.Notes)
grep("June", mergedData2$Special.Notes, value=TRUE)
grep("Fiscal year end: June", mergedData2$Special.Notes, value=TRUE)
answer4 <- length(grep("Fiscal year end: June", mergedData$Special.Notes, value=TRUE))
answer4
source('~/Wk4_Q5.R')
head(SampleTimes)
sampleTimes
head(SampleTimes)
head(amzn)
View(amzn)
amzn[1,1]
amzn["AMZN.OPEN"]
amzn["AMZN.Open"]
class(amzn)
class(sampleTimes)
sampleTimes[1/7]
samplerTimes[1:8]
sampleTimes[1:8]
class(sampleTimes[1])
dateNumbers <- as.numeric(sampleTimes)
class(dateNumbers)
dateNumbers[1]
dateNumbers
sampleTimes[1:10]
test1 <- grep("2012", dateNumbers, value=TRUE)
test1
test1 <- grep("2012", sampleTimes, value=TRUE)
class(test1)
head(test1)
class(test1[1])
test2 <- grep("2012", sampleTimes, value=TRUE)
length(test2)
test3 <- length(test2)
test3
class(test3)
test2
length(sampleTimes)
sampleTimes
test2[1]
class(test2[1])
weekdays(test2[1])
Sys.Date(test2)
test4 <- as.Date(test2, %Y%m%d)
test4 <- as.Date(test2, "%Y%m%d")
class(test4)
class(test4[4])
test4[4]
test4[1]
test5 <- as.Date(test2)
test5
class(test5)
class(test5[4])
test5[4]
weekdays(test5)
test6 <- subset(test5, "Monday")
length(test5)
test6 <- grep("Monday", test5)
test6
length(test6)
test6 <- grep("Monday", test5, value=TRUE)
length(test6)
class(test6)
test5
weekdays(test5)
test6 <- weekdays(test5)
head(test6)
test7 <- grep("Monday", test6)
test7
length(test7)
answer5b <- length(test7)
answer5b
test9 <- grep("Monday", test6, value=TRUE)
test9
par ?
exit
?par
exit
quit
q()
rm(list=ls(all=TRUE))
q()
dir()
getwd()
dir(*.rmd)
dir("*.rmd")
dir("Wk4_Q5.R")
dir()
list
list.files()
dir()
dir()
source('C:/Users/ric/RepData_PA1/PA1_template2.R')
library(ggplot2)
plot(activityData$interval, activityData$steps)
plot(activityData$interval, avg(activityData$Steps))
plot(activityData$interval, mean(activityData$Steps))
str(activityData)
test5 <- colMeans(activityData$steps, na.rm = FALSE)
test5 <- colMeans(activityData, na.rm = FALSE, dims = 1)
class(activityData$steps)
test5 <- colMeans(activityData$steps, na.rm = FALSE, dims = 1)
dim(activityData)
test5 <- colMeans(activityData, na.rm = FALSE, dims = 1)
test5 <- colMeans(activityData, na.rm = FALSE, dims = 0)
test5 <- colMeans(activityData, na.rm = FALSE)
sum(activityData$steps)
mean(activityData$steps)
sum(activityData$steps, na.rm=FALSE)
mean(activityData$steps, na.rm=FALSE)
test5 <- mean(activityData$steps, na.rm=FALSE
)
test5
class(test5)
tables()
table()
sapply(activityData, class)
sapply(activityData, sum)
class(activityData)
test6 <- as.data.table(activityData)
test6 <- tapply(activityData$steps, activityData$interval, mean)
test6
class(test6)
test6[1]
names(test6)
plot(test6)
summary(test6)
summary(test6[,])
dim(test6)
max(test6)
test6[max(test6)]
test7 <- test6[max(test6)]
test7
test6[max]
head(test6)
max(test6)
max(test6[])
max(test6[,])
dim(test6)
plot(test6, type=1)
test8 <- as.data.frame(test6)
class(test8)
head(test8)
tail(test8)
max(test8)
test8 <- as.data.frame(test6[])
test8
class(test8)
dim(test8)
head(test8)
names(test8)
test8 <- as.data.frame(test6)
names(test8)
test8[1,]
test8[,1]
test8[,max(test8)]
max(test8[,1])
max(test8)
plot(test8)
plot(test8, type=1)
plot(test8, type="1")
plot(test8, type="l")
plot(test8[,1], type="l")
names(test8)
names(test8[,1])
names(test8[1,])
test8[1,1]
test8[835,]
test8[,835]
test8[1,2]
test8[2,1]
plot(test8[max(test8),1], type="l")
plot(test8[1,max(test8)], type="l")
plot(test8, type="l", xlab="Interval", main="Average Daily Activity Pattern")
plot(test8, type="l", xlab="Interval", ylab="Avg Daily Activity",main="Average Daily Activity Pattern")
names(test8)
dim(test8)
colnames(test8)
table(test8)
max(test8)
max(test6)
test7
summary(test8)
class(test8)
names(activityData)
max(test6)
rownames(max(test6))
rownames(max(test8))
colnames(max(test8))
names(test8)
head(test8)
View(test8)
row.names(test8)
row.names(test8[max(test8)])
max(test8)
row.names(max(test8))
max(test8[row.names,])
test8
row.names(test8)
source('C:/Users/ric/RepData_PA1/PA1_template2.R')
test7
test8
test6
class(test6)
class(test8)
class(test7)
test7 <- c(test6[max(test6)])
test7
test7 <- c(test6[,max(test6)])
max(test8)
names(max(test8))
names(test8)
rownames(test8)
rownames(test8[max(test8)])
rownames(test8[,max(test8)])
for (i in which(sapply(activityDataRaw, is.numeric))) {
activityDataRaw[is.na(dat[, i]), i] <- mean(activityDataRaw[, i],  na.rm = TRUE)
}
for (i in which(sapply(activityDataRaw, is.numeric))) {
activityDataRaw[is.na(activityDataRaw[, i]), i] <- mean(activityDataRaw[, i],  na.rm = TRUE)
}
head(activityDataRaw)
tail(activityDataRaw)
test10 <- for (i in which(sapply(activityDataRaw, is.numeric))) {
activityDataRaw[is.na(activityDataRaw[, i]), i] <- mean(activityDataRaw[, i],  na.rm = TRUE)
}
head(test10)
max(test8)
activityDataModified <- actvityDataRaw
activityDataModified <- activityDataRaw
head(activityDataModified)
head(activityDataRaw)
source('C:/Users/ric/RepData_PA1/PA1_template2.R')
source('C:/Users/ric/RepData_PA1/PA1_template2.R')
head(test10)
head(activityDataRaw)
tail(test10)
tail(activityDataRaw)
exit
activityDataModified <- activityDataRaw
## reference: http://stackoverflow.com/questions/9322773/how-to-replace-na-with-mean-by-subset-in-r-impute-with-plyr
for (i in which(sapply(activityDataRaw, is.numeric))) {
activityDataModified[is.na(activityDataRaw[, i]), i] <- mean(activityDataRaw[, i],  na.rm = TRUE)
}
head(activityDataRaw)
head(activityDataModified)
hist(activityDataModified)
hist(activityDataModified$steps)
hist(activityDataRaw$steps)
hist(log(activityDataModified$steps))
hist(log(activityDataRaw$steps))
table(activityDataModified)
